" Akko's vimrc settings'"
"
" [1] Plugins Installation
" [2] Color Scheme
" [3] General
" [4] Shortcuts
" [5] Plugins Configuration

" <!-- [1] Plugins Installation
"

" vim-plug is not installed
if empty(glob("~/.vim/autoload/plug.vim"))
    sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
end

call plug#begin('~/.local/share/nvim/site/plugged')

" General
Plug 'scrooloose/nerdtree'
Plug 'airblade/vim-gitgutter'
Plug 'ap/vim-buftabline'
Plug 'mattn/emmet-vim'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'ThePrimeagen/vim-be-good', {'do': './install.sh'}
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'


" Languages
Plug 'tpope/vim-endwise'
Plug 'alvan/vim-closetag'
Plug 'skywind3000/asyncrun.vim'
Plug 'elixir-editors/vim-elixir'
Plug 'dense-analysis/ale'
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }

" Color scheme
Plug 'gruvbox-community/gruvbox'

call plug#end()
"
" -->  [1] Plugins Installation

" <!-- [2] Color Scheme
"
" Are we supporting colors?
if &t_Co > 2 || has("gui_running")
   syntax on
   set colorcolumn=80
   silent! color gruvbox
   set background=dark
endif

" Extra fancyness if full pallete is supported.
if &t_Co >= 256 || has("gui_running")
    set cursorline
    set cursorcolumn
endif
"
" --> [2] Color Scheme

" <!-- [3] General
"
" Goodbye vi
set nocompatible
set history=1000
set noswapfile
set nobackup

" Modify indenting settings
"
set autoindent
set expandtab
set shiftwidth=4
set softtabstop=4
set autoread

" Some programming languages work better when only 2 spaces padding is used.
"
autocmd FileType html,css,sass,scss,javascript setlocal sw=2 sts=2
autocmd FileType json setlocal sw=2 sts=2
autocmd FileType ruby,eruby setlocal sw=2 sts=2
autocmd FileType yaml setlocal sw=2 sts=2

" Other options
"
set encoding=utf-8
set backspace=indent,eol,start
set hidden
set colorcolumn=1000
set laststatus=2
set noshowmode
inoremap { {}<Esc>i
inoremap ( ()<Esc>i
inoremap [ []<Esc>i

" Number line, switch between relative and absolute.
"
set relativenumber
nmap <F5> :set relativenumber! number!<CR>
imap <F5> <ESC>:set relativenumber! number!<CR>a
"
" --> [3] General

" <-- [4] Shortcuts
"
" One key to rule them all,
" One key to find them,
" One key to bring them all
" and in the darkness bind them.
"
let mapleader=","

" Close current file
"
nnoremap <Leader>q :bd<CR>

" Window navigation
"
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l
nnoremap <Leader>l :bn<CR>
nnoremap <Leader>Ã± :bp<CR>
nnoremap <Leader>; :bp<CR>
"
" --> [4] Shortcuts

" <-- [5] Plugins Configuration
"
" NerdTree
"
map <Leader>n :NERDTreeToggle<CR>
let NERDTreeQuitOnOpen=1

" COC
"
nmap <Leader>gd <Plug>(coc-definition)
nmap <Leader>gr <Plug>(coc-references)
nnoremap <C-p> :GFiles<CR>

" Vim-closetag
"
let g:closetag_filenames = "*.html,*.xhtml,*.phtml,*.html.erb,*.xml.erb,*.xml,*php"
"

" Ale
"
let g:ale_fix_on_save = 1
let g:ale_linters = {
\ 'javascript': ['standard'],
\ 'typescript': ['prettier'],
\ 'json': ['prettier']
\ }
let g:ale_fixers = {
\ '*': ['remove_trailing_lines', 'trim_whitespace'],
\ 'javascript': ['standard'],
\ 'typescript': ['prettier', 'eslint', 'tslint'],
\ 'json': ['prettier']
\ }

" Airline
"
let g:airline#extensions#tabline#enabled = 1

" Autoreload file when change git branc
"
augroup auto_checktime
  autocmd!
  autocmd FocusGained,BufEnter,CursorHold * silent! checktime
augroup en

" --> [5] Plugins Configuration
